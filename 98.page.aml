Dashboard _98 {
  title: '98'
  description: ''''''

  theme: PageTheme {
    block {
      label {
        font_family: "Inter"
        font_size: 14
        // font_color: "#1357A0"
        font_weight: "medium"
        font_style: "normal"
      }
      text {
        font_family: "Inter"
        font_size: 15
        // font_color: "#1357A0"
        font_weight: "normal"
        font_style: "normal"
      }
      border {
        border_width: 1
        border_radius: 8
        border_color: "#4896EA"
        border_style: "solid"
      }
      background {
        bg_color: "#E8F2FD"
        bg_repeat: false
        bg_size: "cover"
  // bg_image:
      }
      padding: 12
      shadow: "none"
      opacity: 1
    }

    custom_css: @css 
      .dac-body {
        .h-table {
          --ag-background-color: #a4a5fd;
        }
      }
    ;;
  }

  block text_block: TextBlock {
    content: @md
      # Heading 1
      ### Heading 3
      This is a **dashboard** with _canvas layout_
    ;;
  }

  block text_filter: FilterBlock {
    type: 'text' // or 'field'
    label: 'Sample text filter'
    // use the below source for 'field' filter
    // source: FieldFilterSource {
    //   dataset: 'dataset'
    //   field: ref('data model', 'data field')
    // }
    default {
      operator: 'is'
      value: 'Default value'
    }
  }
  block v1: VizBlock {
    label: 'Count of Id compared with Count of Owner Id'
    viz: MetricKpi {
      dataset: hehihehi
      value: VizFieldFull {
        ref: ref('public_activities', 'id')
        aggregation: 'count'
        format {
          type: 'number'
          pattern: 'inherited'
        }
      }
      compare_value: VizFieldFull {
        ref: ref('public_activities', 'owner_id')
        aggregation: 'count'
        format {
          type: 'number'
          pattern: 'inherited'
        }
      }
      settings {
        aggregate_awareness {
          enabled: true
          debug_comments: true
        }
      }
    }
    settings {
      hide_label: true
    }
  }
  block v2: VizBlock {
    label: 'sorted id with associated url'
    viz: DataTable {
      dataset: hehihehi
      fields: [
        VizFieldFull {
          ref: ref('public_dashboards', 'id')
          format {
            type: 'number'
            pattern: 'inherited'
          }
        },
        VizFieldFull {
          ref: ref('public_dashboards', 'url')
          format {
            type: 'text'
          }
          uname: 'public_dashboards_url'
        }
      ]
      settings {
        show_row_number: true
        sorts: [
          SortSetting {
            field_index: 0
            direction: 'asc'
          }
        ]
        row_limit: 10000
        column_width {
          manual_widths: [
            ColumnWidth {
              key: 'public_dashboards_url'
              width: 158
            }
          ]
        }
        aggregate_awareness {
          enabled: true
          debug_comments: true
        }
        frozen_columns: 0
      }
    }
  }
  block v3: VizBlock {
    label: 'Count of Parameters by Month Created At'
    viz: LineChart {
      dataset: hehihehi
      x_axis: VizFieldFull {
        ref: ref('public_activities', 'created_at')
        transformation: 'datetrunc month'
        format {
          type: 'date'
          pattern: 'LLL yyyy'
        }
      }
      y_axis {
        series {
          field: VizFieldFull {
            ref: ref('public_activities', 'parameters')
            aggregation: 'count'
            format {
              type: 'number'
              pattern: 'inherited'
            }
          }
        }
      }
      settings {
        row_limit: 10000
        x_axis_show_null_datetime: false
        aggregate_awareness {
          enabled: true
          debug_comments: true
        }
      }
    }
  }
  view: CanvasLayout {
    label: 'View 1'
    height: 800
    block v1 {
      position: pos(20, 300, 390, 170)
    }
    block v2 {
      position: pos(600, 180, 590, 380)
      layer: 1
    }
    block text_block {
      position: pos(20, 20, 1200, 150)
    }
    block text_filter {
      position: pos(20, 190, 300, 100)
    }
    block v3 {
      position: pos(20, 480, 400, 300)
      layer: 2
    }
  }
}