Func sticky_note(color: String, content: String) { // auto infer return type = VizBlock
  TextBlock {
    content: @md <div style="padding:4px">
      <div style="
        width: 100%;
        font-weight: 400;
        font-size: 12px;
        margin: 0 auto;
        border-radius: 2px;
        padding: 10px;
        box-shadow: 1px 1px 5px 0px rgba(0,0,0,0.05);
        background: #f1c40f;
        -webkit-transform: rotate(1deg);
        -moz-transform: rotate(1deg);
        -o-transform: rotate(1deg);
        -ms-transform: rotate(1deg);
        transform: rotate(1deg);
        background: ${color}">${content} </div>
    </div>;;
  }
}

Func sticky_note_pink(content: String) {
  sticky_note("#ffe2ec", "${content}")
}

Func sticky_note_yellow(content: String) {
  sticky_note("#fff7de", "${content}")
}

Func sticky_note_white(content: String) {
  sticky_note("#fbfbfb", "${content}")
}

Func sticky_note_blue(content: String) {
  sticky_note("#d9ecff", "${content}")
}


Dashboard vizlib {
  title: 'Vizlib'
  description: ''''''



  view: CanvasLayout {
    label: 'View 1'
    height: 800
    block v1 {
      position: pos(170, 30, 830, 380)
      layer: 1
    }
    block v2 {
      position: pos(10, 420, 400, 300)
      layer: 2
    }
    block f1 {
      position: pos(420, 420, 300, 100)
      layer: 3
    }
  }
  block v1: VizBlock {
    label: 'Total Orders by Countries & Order Status'
    viz: PivotTable {
      dataset: raw_aql_ecommerce
      filter {
        field: ref('countries', 'name')
        operator: 'is'
        value: [
          'Australia',
          'Germany',
          'Indonesia'
        ]
      }
      rows: [
        VizFieldFull {
          ref: ref('countries', 'name')
          format {
            type: 'text'
          }
        }
      ]
      columns: [
        VizFieldFull {
          ref: ref('orders', 'status')
          format {
            type: 'text'
          }
        }
      ]
      values: [
        VizFieldFull {
          ref: 'total_orders'
          format {
            type: 'number'
            pattern: 'inherited'
          }
        }
      ]
      settings {
        show_row_total: true
        show_column_total: true
        row_limit: 10000
        aggregate_awareness {
          enabled: true
          debug_comments: true
        }
      }
    }
  }
  block v2: VizBlock {
    label: 'Count of ID by Month Created At and Status'
    viz: ColumnChart {
      dataset: raw_aql_ecommerce
      x_axis: VizFieldFull {
        ref: ref('orders', 'created_at')
        transformation: 'datetrunc month'
        format {
          type: 'date'
          pattern: 'LLL yyyy'
        }
      }
      legend: VizFieldFull {
        ref: ref('orders', 'status')
        format {
          type: 'text'
        }
      }
      y_axis {
        series {
          field: VizFieldFull {
            ref: ref('orders', 'id')
            aggregation: 'count'
            format {
              type: 'number'
              pattern: 'inherited'
            }
          }
        }
      }
      settings {
        row_limit: 10000
        x_axis_show_null_datetime: false
        aggregate_awareness {
          enabled: true
          debug_comments: true
        }
      }
    }
  }
  block f1: FilterBlock {
    label: 'status'
    type: 'field'
    source: FieldFilterSource {
      dataset: raw_aql_ecommerce
      field: ref('orders', 'status')
    }
    default {
      operator: 'is'
      value: []
    }
  }
}