Dashboard test_dashboard {
  title: 'test_dashboard'
  description: ''''''

  view: CanvasLayout {
    label: 'View 1'
    width: 1080
    height: 1320
    grid_size: 20
    block v2 {
      position: pos(20, 20, 940, 460)
      layer: 1
    }
    block v3 {
      position: pos(20, 520, 940, 400)
      layer: 1
    }
    block t1 {
      position: pos(100, 580, 320, 100)
      layer: 2
    }
    block v4 {
      position: pos(100, 920, 680, 380)
      layer: 3
    }
  }
  block v2: VizBlock {
    label: 'Running Sum of Val by Event Time and Name - Line chart'
    viz: LineChart {
      dataset: test_running_totals_dataset
      x_axis: VizFieldFull {
        ref: ref('testing_running_totals', 'event_time')
        transformation: 'datetrunc day'
        format {
          type: 'date'
          pattern: 'LLL dd'
        }
      }
      legend: VizFieldFull {
        ref: ref('testing_running_totals', 'name')
        format {
          type: 'text'
        }
      }
      y_axis {
        settings {
          stack_series_by: 'value'
        }
        series {
          field: VizFieldFull {
            ref: ref('testing_running_totals', 'val')
            aggregation: 'running sum'
            format {
              type: 'number'
              pattern: 'inherited'
            }
          }
          settings {
            point {
              value: 'Elphaba'
              color: '#2AB24AFF'
            }
            point {
              value: 'Galinda'
              color: '#70BBCDFF'
            }
          }
        }
      }
      settings {
        row_limit: 5000
      }
    }
  }
  block v3: VizBlock {
    label: 'Running Sum of Val by Event Time and Name - Line chart (dup)'
    viz: LineChart {
      dataset: test_running_totals_dataset
      x_axis: VizFieldFull {
        ref: ref('testing_running_totals', 'event_time')
        transformation: 'datetrunc day'
        format {
          type: 'date'
          pattern: 'LLL dd'
        }
      }
      legend: VizFieldFull {
        ref: ref('testing_running_totals', 'name')
        format {
          type: 'text'
        }
      }
      y_axis {
        series {
          field: VizFieldFull {
            ref: ref('testing_running_totals', 'val')
            aggregation: 'running sum'
            format {
              type: 'number'
              pattern: 'inherited'
            }
          }
          settings {
            point {
              value: 'Elphaba'
              color: '#2AB24AFF'
            }
            point {
              value: 'Galinda'
              color: '#70BBCDFF'
            }
          }
        }
      }
      settings {
        row_limit: 5000
        aggregate_awareness {
          enabled: true
          debug_comments: true
        }
      }
    }
  }
  block t1: TextBlock {
    content: @md # Hahahahha;;
  }
  block v4: VizBlock {
    label: 'Total Orders by Month Created At and Status'
    viz: CombinationChart {
      dataset: aql_dataset
      x_axis: VizFieldFull {
        ref: ref('orders', 'created_at')
        transformation: 'datetrunc month'
        format {
          type: 'date'
          pattern: 'LLL yyyy'
        }
      }
      legend: VizFieldFull {
        ref: ref('orders', 'status')
        format {
          type: 'text'
        }
      }
      y_axis {
        series {
          field: VizFieldFull {
            ref: 'total_orders'
            format {
              type: 'number'
              pattern: 'inherited'
            }
          }
          settings {
            color_palette: 0
          }
        }
      }
      y_axis {
        settings {
          alignment: 'right'
        }
        series {
          mark_type: 'line'
          field: VizFieldFull {
            ref: ref('users', 'total_users')
            format {
              type: 'number'
              pattern: 'inherited'
            }
            break_by_legend: false
          }
        }
      }
      settings {
        row_limit: 10000
        x_axis_show_null_datetime: false
        aggregate_awareness {
          enabled: true
          debug_comments: true
        }
      }
    }
  }
  interactions: [
    FilterInteraction {
      from: 'v2'
      to: [

      ]
    },
    FilterInteraction {
      from: 'v3'
      to: [

      ]
    }
  ]
}